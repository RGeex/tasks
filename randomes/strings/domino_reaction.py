"""
Вам дана цепочка домино. Для каждого слота есть 3 варианта:

    "|" представляет собой стоящее домино

    «/» представляет собой опрокинутое домино.

    " " представляет собой пространство, где нет домино

Например:

"||| ||||//| |/"

Опрокидывание домино приведет к падению следующего домино справа от него, но если домино уже
опрокинуто или костяшка отсутствует, реакция прекратится.
Что вам нужно сделать, так это найти полученную строку, если первое домино опрокинуто. Итак,
в приведенном выше примере результат будет таким:

"/// ||||//| |/"

поскольку реакция прекратится, как только она достигнет места.
"""


def domino_reaction(s: str) -> str:
    """
    Роняет домино.
    """
    return next(('/' * i + s[i:] for i, x in enumerate(s) if x != '|'), '/' * len(s))


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        ("||| ||||//| |/", "/// ||||//| |/"),
        ("|||||", "/////"),
        (" ///", " ///"),
    )
    for key, val in data:
        assert domino_reaction(key) == val


if __name__ == '__main__':
    test()
