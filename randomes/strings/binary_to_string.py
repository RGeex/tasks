"""
Напишите функцию, которая принимает двоичную строку и возвращает эквивалентный
декодированный текст (текст в кодировке ASCII).

Каждые 8 ​​бит двоичной строки представляют 1 символ таблицы ASCII.

Входная строка всегда будет допустимой двоичной строкой.

Символы могут быть в диапазоне от «00000000» до «11111111» (включительно).

Примечание. В случае пустой двоичной строки ваша функция должна возвращать
пустую строку.
"""


def binary_to_string(binary: str) -> str:
    """
    Преобразует двоичную строку по 8 бит в ASCII.
    """
    return ''.join([chr(int(''.join(x), 2)) for x in zip(*[iter(binary)] * 8)])


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        ('00110001001100000011000100110001', '1011'),
        ('0100100001100101011011000110110001101111', 'Hello'),
    )
    for key, val in data:
        assert binary_to_string(key) == val


if __name__ == '__main__':
    test()
