"""
Вам будет предоставлена ​​строка случайных символов (цифр, букв и символов).
Чтобы декодировать эту строку в искомый ключ:

(1) подсчитать количество вхождений каждой строчной буквы ascii и

(2) вернуть упорядоченную строку длиной 26 позиций, соответствующую количеству
вхождений каждой соответствующей буквы в алфавите.

Например:

'$aaaa#bbb*cc^fff!z' gives '43200300000000000000000001'
   ^    ^   ^  ^  ^         ^^^  ^                   ^
  [4]  [3] [2][3][1]        abc  f                   z
  
'z$aaa#ccc%eee1234567890' gives '30303000000000000000000001'
 ^  ^   ^   ^                    ^ ^ ^                    ^
[1][3] [3] [3]                   a c e                    z

Помните, что возвращаемая строка всегда должна иметь длину 26 символов и
учитывать только строчные буквы.

Примечание. Можно предположить, что каждая строчная буква будет встречаться
во входной строке не более 9 раз.

"""


def decrypt(test_key: str) -> str:
    """
    Декодирует строку, определяя кол-во букв алфавита
    в каждой порядковой позиции.
    """
    return ''.join(str(test_key.count(chr(i + 97))) for i in range(26))


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        ('$aaaa#bbb*ccfff!z', '43200300000000000000000001'),
        ('z$aaa#ccc%eee1234567890', '30303000000000000000000001'),
    )
    for key, val in data:
        assert decrypt(key) == val


if __name__ == '__main__':
    test()
