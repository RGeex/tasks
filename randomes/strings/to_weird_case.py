"""
Напишите функцию, которая принимает строку и возвращает ту же строку,
в которой все четные индексированные символы в каждом слове записаны
в верхнем регистре, а все нечетные индексированные символы в каждом
слове — в нижнем регистре. Только что объясненная индексация начинается
с нуля, поэтому нулевой индекс является четным, поэтому этот символ должен
быть в верхнем регистре, и вам нужно начинать заново для каждого слова.

Переданная строка будет состоять только из букв алфавита и пробелов ( ' ').
Пробелы будут присутствовать только в том случае, если слов несколько.
Слова будут разделены одним пробелом( ' ').
Примеры:

"String" => "StRiNg"
"Weird string case" => "WeIrD StRiNg CaSe"
"""


def to_weird_case(words: str) -> str:
    """
    Меняет регистры символов переданной строки на поочередно сменяющийся с верхнего на нижний на каждом слове.
    """
    return ' '.join(''.join(w if i % 2 else w.upper() for i, w in enumerate(word)) for word in words.lower().split())


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        ('This', 'ThIs'),
        ('is', 'Is'),
        ('THIs iS a TEST', 'ThIs Is A TeSt'),
    )
    for key, val in data:
        assert to_weird_case(key) == val


if __name__ == '__main__':
    test()
