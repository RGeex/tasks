"""
В этом Ката мы будем рассчитывать темп бега. Для этого нам нужно знать
расстояние и время.

Создайте следующую функцию:

running_pace(distance, time)

Где: distance - Поплавок с количеством километров

time - Строка, содержащая время, необходимое для прохождения расстояния.
Это всегда будет минуты:секунды. Например, «25:00» означает 25 минут.
Вам не придется иметь дело с часами.

Функция должна возвращать темп, например «4:20» означает, что прохождение
одного километра заняло 4 минуты 20 секунд.

Примечание . Темп всегда должен отображать только количество минут и секунд.
Вам не нужно конвертировать их в часы. Пол количество секунд.

"""


def running_pace(distance: int | float, time: str) -> str:
    """
    Позаданному времени и расстоянию вычисляет темп.
    """
    return ':'.join(f'{int(x):0>{i and 2}}' for i, x in enumerate(divmod(sum(int(x) * [60, 1][i] for i, x in enumerate(time.split(':'))) / distance, 60)))


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        ((1,'3:15'),'3:15'),
        ((5,'25:00'),'5:00'),
        ((15,'75:00'),'5:00'),
        ((2.51,'10:43'),'4:16'),
        ((4.99,'22:32'),'4:30'),
    )
    for key, val in data:
        assert running_pace(*key) == val


if __name__ == '__main__':
    test()
