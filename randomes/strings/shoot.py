"""
Пит и его приятель Фил отправились в сельскую местность,
стреляя в глиняных голубей из дробовика — потрясающее развлечение.

Они решают устроить соревнование. 3 патрона по 2 выстрела.
Победителем становится тот, у кого больше всего попаданий.

К некоторым глинам прикреплено что-то, создающее много дыма при ударе, что,
как гарантирует упаковка, вызывает «настоящее волнение!»
(действительно это произошло). Ни одна из взрывных вещей на самом деле не
сработала, но для этой ката, скажем так, они сработали.

Для каждого раунда вы получите следующий формат:

[{P1:'XX', P2:'XO'}, правда]

Это массив, содержащий объект и логическое значение. Pl представляет Пита,
P2 представляет Фила. X означает попадание, а O означает промах. Если логическое
значение истинно, любое попадание оценивается в 2. Если оно ложно, любое попадание
оценивается в 1.

Узнайте, кто победил. Если это Пит, верните «Пит побеждает!». Если это Фил,
верните «Фил побеждает!». Если очки равны, верните «Ничья!».

Обратите внимание: поскольку раундов три, фактический ввод (x) будет выглядеть примерно так:

[[{P1:'XX', P2:'XO'}, правда], [{P1:'OX', P2:'OO'}, ложь], [{P1:'XX', P2:'OX' }, истинный]]
"""


def shoot(results: list[list[dict, bool]]) -> str:
    """
    Определяет победителя.
    """
    p1, p2 = map(sum, zip(*[[m[u].count('X') * (x + 1) for u in ('P1', 'P2')] for m, x in results]))
    return "Draw!" if p1 == p2 else f"{['Pete', 'Phil'][p1 < p2]} Wins!"


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        (([[{"P1":"XX", "P2":"XO"}, True], [{"P1":"OX", "P2":"OO"}, False], [{"P1":"XX", "P2":"OX"}, True]]), "Pete Wins!"),
        (([[{"P1":"XX", "P2":"XO"}, False], [{"P1":"OX", "P2":"XX"}, False], [{"P1":"OO", "P2":"XX"}, True]]), "Phil Wins!"),
        (([[{"P1":"OO", "P2":"XX"}, False], [{"P1":"OO", "P2":"XX"}, False], [{"P1":"XX", "P2":"OO"}, True]]), "Draw!"),
        (([[{"P1":"XX", "P2":"XX"}, True], [{"P1":"XX", "P2":"OX"}, False], [{"P1":"OO", "P2":"OX"}, True]]), "Phil Wins!"),
        (([[{"P1":"XX", "P2":"XX"}, True], [{"P1":"OO", "P2":"OO"}, False], [{"P1":"XX", "P2":"XX"}, True]]), "Draw!"),
    )
    for key, val in data:
        assert shoot(key) == val


if __name__ == '__main__':
    test()
