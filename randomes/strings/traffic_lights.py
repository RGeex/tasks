"""
Обзор

Строка символов представляет городскую дорогу.

Автомобили едут по дороге, подчиняясь светофорам.

Легенда:

    .= Дорога
    C= Автомобиль
    G= ЗЕЛЕНЫЙ светофор
    O= ОРАНЖЕВЫЙ светофор
    R= КРАСНЫЙ светофор

Что-то вроде этого:
С... Р ............ Г ......

Правила
Моделирование

На каждой итерации:

    свет меняется по правилам светофора... потом
    машина движется, соблюдая правила дорожного движения

Правила светофора

Светофоры меняют цвет следующим образом:

    ЗЕЛЕНЫЙ для 5единицы времени... тогда
    ОРАНЖЕВЫЙ для 1единица времени... тогда
    КРАСНЫЙ для 5единицы времени....
    ... и повторите цикл

Правила автомобиля

    Автомобили движутся по дороге слева направо, перемещаясь на 1 позицию символа за единицу
    времени.
    Автомобили могут свободно передвигаться до тех пор, пока не подъедут к светофору. Затем:
    если свет ЗЕЛЕНЫЙ , они могут двигаться вперед (временно занимая ту же ячейку, что и свет)
    свет если горит ОРАНЖЕВЫЙ , они должны остановиться (если они уже выехали на перекресток, они
    могут продолжить движение)
    если свет горит КРАСНЫМ, машина должна остановиться, пока свет не станет ЗЕЛЕНЫМ . снова

Задача сказала

Учитывая начальное состояние дороги, верните состояния для всех итераций моделирования.
Вход

    road= дорожный массив
    n= сколько единиц времени моделировать (n >= 0)

Выход

    Массив, содержащий состояния дорог на каждой итерации (включая начальное состояние).
    Примечание. Если автомобиль находится в том же положении, что и светофор, отобразите только
    автомобиль.

Примечания

    Есть только одна машина
    Для исходного состояния дороги
    машина всегда находится на первой позиции символа
    светофоры либо ЗЕЛЕНЫЕ , либо КРАСНЫЕ и находятся в начале цикла обратного отсчета.
    Задержек реакции нет – при переключении света водители автомобилей отреагируют мгновенно!
    Если машина съезжает с дороги, она просто исчезает из поля зрения.
    Между соседними светофорами всегда будет какая-то дорога.

Пример

Запустите симуляцию на 10 единиц времени.

Вход

    road = "C...R............G......"
    n = 10

Результат

[
  "C...R............G......", // 0 initial state as passed
  ".C..R............G......", // 1
  "..C.R............G......", // 2
  "...CR............G......", // 3
  "...CR............G......", // 4
  "....C............O......", // 5 show the car, not the light
  "....GC...........R......", // 6
  "....G.C..........R......", // 7
  "....G..C.........R......", // 8
  "....G...C........R......", // 9
  "....O....C.......R......"  // 10
]

"""


def traffic_lights(road: str, n: int) -> list[str]:
    """
    Моделирование автомобильного трафика с учетом сигналов светофора.
    """
    t = {i: ['GOR'.index(x), 0] for i, x in enumerate(road) if x in 'GOR'}
    c, r, s = 0, [road], [5, 1, 5]
    for _ in range(n):
        t = {i: [(x[0] + (not (n := (x[1] + 1) % s[x[0]]))) % 3, n] for i, x in t.items()}
        c += 0 if t.get(c + 1, (0,))[0] else 1
        r.append(''.join('GOR'[t[i][0]] if i != c and i in t else '.C'[i == c] for i in range(len(road))))
    return r


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = ((("C...R............G......", 10), """\
C...R............G......
.C..R............G......
..C.R............G......
...CR............G......
...CR............G......
....C............O......
....GC...........R......
....G.C..........R......
....G..C.........R......
....G...C........R......
....O....C.......R......""".split('\n')),)

    for key, val in data:
        assert traffic_lights(*key) == val


if __name__ == '__main__':
    test()
