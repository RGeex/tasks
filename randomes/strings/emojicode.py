"""
В этом задании вам нужно создать две функции для преобразования строки эмодзи
в формат «emojicode» и обратно.

Строки эмодзи состоят исключительно из эмодзи Юникода, и каждый из эмодзи
может быть представлен одной кодовой точкой Юникода. Не существует комбинирующих
символов, селекторов вариантов, соединителей, модификаторов направления,
модификаторов цвета, групп людей или любых других смайлов, которые состоят из
более чем одной кодовой точки.

Строка Emojicode  — это строка кодовых точек смайлов Unicode, разделенных
пробелами. Каждая кодовая точка форматируется как десятичное значение,
преобразованное в строку в последовательность цифр эмодзи в Юникоде .
Примеры

Смайлик «УЛЫБАЮЩЕЕ ЛИЦО С УЛЫБАЮЩИМСЯ ГЛАЗАМИ» 😊 кодируется как U+1F60A.
Десятичное значение его кодовой точки равно 128522. После преобразования
значения в строку и использования клавиш эмодзи для цифр код эмодзи будет
"1️⃣2️⃣8️⃣5️⃣2️⃣2️⃣".

Три смайлика ВИДЕТЬ-/СЛЫШАТЬ-/ГОВОРИ-НЕ-ЗЛАЯ ОБЕЗЬЯНА представлены кодовыми
точками. U+1F648, U+1F649, и U+1F64A, которые являются десятичными 128584,
128585 и 128586, соответственно. Следовательно, строка "🙈🙉🙊" после
преобразования в emojicode результаты "1️⃣2️⃣8️⃣5️⃣8️⃣4️⃣ 1️⃣2️⃣8️⃣5️⃣8️⃣5️⃣ 1️⃣2️⃣8️⃣5️⃣8️⃣6️⃣".
Размер тестов

На момент написания стандарт Unicode Emoji включает около 1380 смайлов,
которые могут быть представлены одной кодовой точкой Unicode (см. Ссылки ниже).
Каждый из этих смайлов хотя бы один раз проверяется на конверсию в обе стороны с
помощью фиксированных тестов. Кроме того, небольшие случайные тесты проверяют
50 строк по 1–5 смайлов и 200 строк по 20–50 смайлов на предмет конвертации в
обоих направлениях.
"""


def to_emojicode(emojis: str) -> str:
    """
    Декодирует строку из смайликов в цифровые эмодзи.
    """
    return ' '.join(''.join(i + '️' + '⃣' for i in str(ord(x))) for x in emojis)


def to_emojis(emojicode: str) -> str:
    """
    Декодирует строку из цифровых эмодзи в смайлики.
    """
    return ''.join([chr(int(x[::3])) for x in emojicode.split()])


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        ("😊", "1️⃣2️⃣8️⃣5️⃣2️⃣2️⃣"),
        ("🙈🙉🙊", "1️⃣2️⃣8️⃣5️⃣8️⃣4️⃣ 1️⃣2️⃣8️⃣5️⃣8️⃣5️⃣ 1️⃣2️⃣8️⃣5️⃣8️⃣6️⃣"),
    )
    for key, val in data:
        assert to_emojicode(key) == val

    data = (
        ("1️⃣2️⃣8️⃣5️⃣2️⃣2️⃣", "😊"),
        ("1️⃣2️⃣8️⃣5️⃣8️⃣4️⃣ 1️⃣2️⃣8️⃣5️⃣8️⃣5️⃣ 1️⃣2️⃣8️⃣5️⃣8️⃣6️⃣", "🙈🙉🙊"),
    )
    for key, val in data:
        assert to_emojis(key) == val


if __name__ == '__main__':
    test()
