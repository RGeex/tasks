"""
Вам даны две строки (st1, st2) в качестве входных данных.
Ваша задача — вернуть строку, содержащую числа в st2,
которых нет в str1. Убедитесь, что числа возвращаются в
порядке возрастания. Все входные данные будут строкой чисел.

Вот некоторые примеры:

findAdded('4455446', '447555446666'); // '56667'
findAdded('44554466', '447554466'); // '7'
findAdded('9876521', '9876543211'); // '134'
findAdded('678', '876'); // ''
findAdded('678', '6'); // ''
"""


from collections import Counter


def find_added(st1: str, st2: str) -> str:
    """
    Поиск всех цифр из строки 2, которых нет в строке 1,
    Вывод в отсортированном порядке.
    """
    return ''.join(sorted([k*v for k, v in (Counter(st2) - Counter(st1)).items()]))


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        (('44554466', '447554466'), '7'),
        (('9876521', '9876543211'), '134'),
        (('4455446', '447555446666'), '56667'),
        (('678', '876'), ''),
        (('678', '6'), ''),
    )
    for key, val in data:
        assert find_added(*key) == val


if __name__ == '__main__':
    test()
