"""
Вы преодолели ров и поднялись по ступеням знаний. Вы выиграли храмовые игры и теперь ищете
сокровища в последнем забеге по храмам. Есть хорошие новости и плохие новости. Вы нашли
сокровище, но устроили ужасную ловушку. Ты наверняка погибнешь в храмовой камере.

Своими последними движениями вы решили нарисовать букву «X», обозначающую место для следующего
археолога.

Учитывая нечетное число n, нарисуйте X для следующей команды. Следуйте примеру ниже.

markSpot(5) ->

X       X
  X   X
    X
  X   X
X       X

For a clearer understanding of the output, let '.' represent a space and \n the newline.
X.......X\n
..X...X\n
....X\n
..X...X\n
X.......X\n

markSpot(3) ->

X   X
  X
X   X  

Если n = 1, верните «X\n», а если вам дано четное число или неверный ввод, верните «?».

Выходные данные должны представлять собой строку без пробелов после последнего X в каждой строке,
но со знаком \n, обозначающим новую строку. 
"""


def mark_spot(n: int) -> str:
    """
    Рисует крестик N размера, по заданному шаблону.
    """
    if isinstance(n, int) and n % 2:
        return ''.join((x := [(x := f'{"":>{i}}X') + (f'{"":>{((n-2-i)*2+1)}}X' if i+1 < n else '') + '\n' for i in range(0, n, 2)]) + x[-2::-1])
    return '?'


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        (5, "X       X\n  X   X\n    X\n  X   X\nX       X\n"),
        (1, "X\n"),
        ([], "?"),
        (11, "X                   X\n  X               X\n    X           X\n      X       X\n        X   X\n          X\n        X   X\n      X       X\n    X           X\n  X               X\nX                   X\n"),
        ("treasure", "?"),
    )
    for key, val in data:
        assert mark_spot(key) == val


if __name__ == '__main__':
    test()
