"""
Функции передается строка, состоящая из трех символов:

    "(" открывающая скобка
    ")" закрытая скобка
    «J» Джокер, который можно заменить на «(», «)» или «»

Разработайте решение, позволяющее определить, представляет ли данная строка
правильную последовательность скобок; возвращаться True / False. Каждой
открытой скобке слева должна соответствовать закрытая скобка справа.
Например, «(()())» — правильная последовательность, «()(()» —
неправильная последовательность. Присутствие джокеров добавляет
дополнительный уровень сложности анализу, поскольку каждая буква
«J» создает три возможности для Пустая строка считается допустимой,
поскольку она не содержит несбалансированных скобок.
"""


def closed_brackets(s: str, c: int = 0) -> bool:
    """
    Поиск парных скобок + Jocker.
    """
    for i, x in enumerate(s, 1):
        if 0 <= c:
            if x != 'J':
                c += 1 if x == '(' else -1
                continue
            for k in (-1, 1):
                if closed_brackets(s[i:], c + k):
                    return True
    return not c


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        ("(J))", True),
        ("(", False),
        ("", True),
        ("()J(", False),
        ("J", True),
        (")(", False),
        ("()", True),
        ("J)(J", True),
        ("(J()J(()(J", False),
        ("J(JJ()J((J", False),
    )

    for key, val in data:
        assert closed_brackets(key) == val


if __name__ == '__main__':
    test()
