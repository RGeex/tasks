"""
Напишите функцию, которая принимает две строки и возвращает n, где n равно
количеству символов, на которые мы должны сдвинуть первую строку вперед,
чтобы она соответствовала второй. Проверка должна быть чувствительной к
регистру.

Например, возьмем строки «усталость» и «тигефа». В этом случае первая строка
была повернута на 5 символов вперед для создания второй строки, поэтому
будет возвращено 5 символов.
Если вторая строка не является допустимым поворотом первой строки, метод
возвращает -1.

Примеры:
"coffee", "eecoff" => 2
"eecoff", "coffee" => 4
"moose", "Moose" => -1
"isn't", "'tisn" => 2
"Esham", "Esham" => 0
"dog", "god" => -1
"""


def shifted_diff(first: str, second: str) -> int:
    """
    Вычисляет на сколько позиий вперед необходимо сместить первую строку,
    что бы получилась вторая.
    """
    return next((i for i in range(len(first)) if first[-i or len(first):] + first[:-i or None] == second), -1)


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        ((" "," "), 0),
        (("  "," "), -1),
        (("hoop","pooh"), -1),
        (("isn't","'tisn"), 2),
        (("Esham","Esham"), 0),
        (("Moose","moose"), -1),
        (("eecoff","coffee"), 4),
    )
    for key, val in data:
        assert shifted_diff(*key) == val


if __name__ == '__main__':
    test()
