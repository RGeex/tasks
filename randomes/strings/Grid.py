"""
Создайте класс Grid, который принимает два аргумента: width и height и создает многострочную строку, содержащую что-то вроде этого:

width=10
height=10
0000000000
0000000000
0000000000
0000000000
0000000000
0000000000
0000000000
0000000000
0000000000
0000000000

У него есть функция plot_point который строит X на сетке. Он принимает два аргумента: x и y. x и y должны начинаться с 1.

x = 5
y = 3
0000000000
0000000000
0000X00000
0000000000
0000000000
0000000000
0000000000
0000000000
0000000000
0000000000

Он также имеет атрибут grid который содержит многострочную строку. Ваша задача — создать класс Grid который это делает.

"""


class Grid():
    """
    Игровое поле.
    """
    def __init__(self, width, height):
        self.x = '\n'.join(['0' * width for _ in range(height)])

    def plot_point(self, x, y) -> None:
        """
        Установка X в заданную позицию.
        """
        self.x = '\n'.join([''.join(['X' if j == x else n for j, n in enumerate(s, 1)]) if i == y else s for i, s in enumerate(self.x.split('\n'), 1)])

    @property
    def grid(self) -> str:
        """
        Поле в виде строки.
        """
        return self.x


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    g = Grid(10, 10)
    assert g.grid == '0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000'
    g.plot_point(3, 5)
    assert g.grid == '0000000000\n0000000000\n0000000000\n0000000000\n00X0000000\n0000000000\n0000000000\n0000000000\n0000000000\n0000000000'


if __name__ == '__main__':
    test()