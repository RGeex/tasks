"""
Гармония гласных — явление в некоторых языках. Это означает, что «Гласная или
гласные в слове изменяются, чтобы звучать одинаково (таким образом, «в
гармонии»)» ( википедия ). Это ката основано на гармонии гласных в венгерском
языке.
Задача:

Ваша цель — создать функцию instrumental() который возвращает действительную
форму действительного венгерского слова w в творительном падеже , т.е. добавьте
правильный суффикс -vel или -val к слову w на основе правил гармонии гласных.
Правила гармонии гласных (упрощенные)

Гласные переднего ряда: e, é, i, í, ö, ő, ü, ű

Гласные заднего ряда: a, á, o, ó, u, ú

Пары гласных (короткие -> длинные) : a -> á, e -> é, i -> í, o -> ó, u -> ú, ö -> ő, ü -> ű

Диграфы: sz, zs, cs
Слово заканчивается на гласную

    Измените окончательную гласную форму с краткой на длинную.
    Добавьте суффикс:
        vel если конечная гласная является гласной переднего ряда
        val если конечная гласная является гласной заднего ряда

Слово заканчивается на согласную
Шаг первый

    Вариант по умолчанию: удвойте конечную согласную и перейдите ко второму
    шагу.
    Особый случай: если слово заканчивается орграфом, удвойте первую букву
    (например, sz -> ssz)

Шаг второй

Добавьте суффикс:

    el если последняя гласная front vowel
    al если последняя гласная back vowel

Примеры:

instrumental("fa") == "fával"
instrumental("teve") == "tevével"
instrumental("betű") == "betűvel"
instrumental("ablak") == "ablakkal"
instrumental("szék") == "székkel"
instrumental("otthon") == "otthonnal"
instrumental("kar") == "karral"
instrumental("rács") == "ráccsal"
instrumental("kosz") == "kosszal"

Предварительные условия:

    Все строки являются строками Юникода.
    Тесты не содержат:
        исключительные случаи, такие как kávé -> kávéval
        слова, оканчивающиеся на удвоенные согласные (например, tett)
        Слова, заканчивающиеся на y
        Слова, заканчивающиеся на u, i
"""


def instrumental(s: str) -> str:
    """
    Преобразует заданное слово, в слово на Венгерском языке в творительном падеже.
    """
    a, b, c = 'eiöüéíőű', 'aouáóú', {'sz': 'ssz', 'zs': 'zzs', 'cs': 'ccs'}
    w, e = [(a, 'vel'), (b, 'val')][next(x in b for x in s[::-1] if x in a + b)]
    if s[-1] in a + b:
        return s[:-1] + s[-1].translate(str.maketrans(w[:len(w) // 2], w[len(w) // 2:])) + e
    return s[:-2] + c.get(s[-2:], s[-2:] + s[-1]) + e[1:]


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        [u"ablak", u"ablakkal"],
        [u"betű", u"betűvel"],
        [u"fa", u"fával"],
        [u"gonosz", u"gonosszal"],
        [u"kar", u"karral"],
        [u"keret", u"kerettel"],
        [u"kosz", u"kosszal"],
        [u"otthon", u"otthonnal"],
        [u"rokkant", u"rokkanttal"],
        [u"rács", u"ráccsal"],
        [u"szék", u"székkel"],
        [u"teve", u"tevével"],
        [u"tükör", u"tükörrel"],
        [u"virág", u"virággal"],
    )
    for key, val in data:
        assert instrumental(key) == val


if __name__ == '__main__':
    test()
