"""
Вам будет дана строка. Ваша задача — вернуть эту строку в определенном порядке,
который я объясню ниже:

Допустим, вы начинаете с этого: "012345"

Первое, что вы делаете, это переворачиваете его: "543210"
Затем вы возьмете строку из 1-й позиции и снова перевернете ее: "501234"
Затем вы возьмете строку из второй позиции и снова перевернете ее: "504321"
Затем вы возьмете строку из 3-й позиции и снова перевернете ее: "504123"

Продолжайте этот шаблон, пока не выполните каждую позицию, а затем вы вернете созданную строку.
Для этого конкретного числа вы вернете: "504132"
Вход:

Строка длиной 1–1000.
Выход:

Правильно переупорядоченная строка.

"""


def reverse_fun(s: str, _n: int = 0) -> str:
    """
    Сортирует строку по заданному алгоритму.
    """
    return reverse_fun(s[:_n] + s[_n:][::-1], _n + 1) if _n <= len(s) else s


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        ('012345', '504132'),
        ('jointhedarkside', 'ejdoiisnktrhaed'),
        ('012', '201'),
        ('012345', '504132'),
        ('0123456789', '9081726354'),
        ('Hello', 'oHlel'),
    )
    for key, val in data:
        assert reverse_fun(key) == val


if __name__ == '__main__':
    test()
