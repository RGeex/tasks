"""
Вам дана строка «strng»

Выполняйте следующую операцию, пока «strng» не станет пустым:

 - Для каждого символа алфавита от «a» до «z» удалите первое вхождение этого символа в «strng»
 (если оно существует).

Например, пусть изначально strng="aabcbbca". Делаем следующие операции:

 - Удалите подчеркнутые символы: strng = "(a)a(b)(c)bbca".  Результатом будет строка strng = "abbca".
 - Удалите подчеркнутые символы: strng = "(a)(b)b(c)a".  Результатом будет строка strng = "ba".
 - Удалите подчеркнутые символы: strng = "(b)(a)".  Результатом будет строка strng = "".
 - Верните значение строки strng непосредственно перед применением последней операции.
 В приведенном выше примере ответ — «ba».

Вы можете предположить следующее:

 - Строка никогда не будет пустой
 - Строка.длина <= 5 * 10**5
 - Строка будет содержать только строчные английские буквы.

"""

from collections import Counter


def last_non_empty_string(s: str) -> str:
    """
    Оставшиеся буквы алфавита в порядке исходной строки.
    """
    x = Counter(s)
    l = max(x.values()) - 1
    for w in x:
        s = s.replace(w, '', l)
    return s


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        ('aabcbbca', 'ba'),
        ('abcd', 'abcd'),
        ('zzxdccvzdd', 'zd'),
    )
    for key, val in data:
        assert last_non_empty_string(key) == val


if __name__ == '__main__':
    test()
