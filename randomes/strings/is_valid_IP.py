"""
Напишите алгоритм, который будет определять действительные адреса IPv4 в
десятичном формате. IP-адреса следует считать действительными, если они
состоят из четырех октетов со значениями между 0и 255, включительно.
Примеры допустимых входных данных:

Examples of valid inputs:
1.2.3.4
123.45.67.89

Неверные примеры ввода:

1.2.3
1.2.3.4.5
123.456.78.90
123.045.067.089

Примечания:

    Ведущие нули (например, 01.02.03.04) считаются недействительными
    Входные данные гарантированно будут одной строкой.
"""


def is_valid_IP(s: str) -> bool:
    """
    Проверяет валидность IP адреса.
    """
    for i, x in enumerate(s.split('.'), -3):
        if not x.isdigit() or int(x) not in range(256) or x.startswith('0') and 1 < len(x):
            return False
    return not i


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        ('', False),
        ('12.255.56.1', True),
        ('abc.def.ghi.jkl', False),
        ('123.456.789.0', False),
        ('12.34.56', False),
        ('12.34.56 .1', False),
        ('12.34.56.-1', False),
        ('123.045.067.089', False),
        ('127.1.1.0', True),
        ('0.0.0.0', True),
        ('0.34.82.53', True),
        ('192.168.1.300', False),
    )
    for key, val in data:
        assert is_valid_IP(key) == val


if __name__ == '__main__':
    test()
