"""
До того, как у подростков появились модные iPhone, подростки изнашивали
большие пальцы, отправляя SMS. сообщения на моноблоках с цифровой
клавиатурой 3x4.
------- ------- -------
|     | | ABC | | DEF |
|  1  | |  2  | |  3  |
------- ------- -------
------- ------- -------
| GHI | | JKL | | MNO |
|  4  | |  5  | |  6  |
------- ------- -------
------- ------- -------
|PQRS | | TUV | | WXYZ|
|  7  | |  8  | |  9  |
------- ------- -------
------- ------- -------
|     | |space| |     |
|  *  | |  0  | |  #  |
------- ------- -------
До разработки систем T9 (предиктивный ввод текста) метод ввод слов назывался
«мульти-нажатием» и подразумевал многократное нажатие кнопки для циклически
перебирать возможные значения.

Например, чтобы ввести букву "R"ты бы нажал кнопку 7ключ три раза
(как отображение на экране текущего символа циклически P->Q->R->S->7).
А персонаж «фиксируется», когда пользователь нажимает другую клавишу или
делает паузу на некоторое время. короткий период времени (таким образом,
не требуется никаких дополнительных нажатий кнопок сверх того, что нужно
для каждой буквы индивидуально). Нулевая клавиша обрабатывает пробелы:
одно нажатие клавиши дает пробел, а два нажатия — ноль.

Чтобы отправить сообщение "WHERE DO U WANT 2 MEET L8R"подростку придется на
самом деле сделать 47 нажатий кнопок. Не зря их сократили.

Для этого задания напишите модуль, который сможет рассчитать количество кнопок.
нажатия, необходимые для любой фразы. В этом упражнении знаки препинания можно
игнорировать. Аналогично, вы можете предположить, что телефон не различает
символы верхнего и нижнего регистра (но для удобства вы должны разрешить
вашему модулю принимать ввод любого из них).

Подсказка: хотя жесткое программирование количества нажатий клавиш для все
26 букв от руки, постарайтесь этого не делать! (Представьте, что вы работаете
за телефоном производитель, который, возможно, тестирует различные раскладки
клавиатуры, и вы хотите чтобы иметь возможность быстро тестировать новые.)
"""


def presses(phrase: str) -> int:
    """
    Подсчитывает кол-во нажатий кнопок телефона для набора сообщения.
    """
    buttons = '1|abc2|def3|ghi4|jkl5|mno6|pqrs7|tuv8|wxyz9| 0'.split('|')
    return sum(1 + b.find(x) for x in phrase.lower() for b in buttons)


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        ("LOL", 9),
        ("HOW R U", 13),
        ('JUW80933TJYEFUW9YZGN', 51),
        ('WHERE DO U WANT 2 MEET L8R', 47),
    )
    for key, val in data:
        assert presses(key) == val


if __name__ == '__main__':
    test()
