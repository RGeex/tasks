"""
Учитывая два слова, сколько букв из них нужно удалить,
чтобы они стали анаграммами?
Пример
    
    Первое слово : c od e w ar s (буквы удалены 4)
    Второе слово : ha c k er r a nk (6 букв удалены)
    Результат: 10

Подсказки

    Слово является анаграммой другого слова, если в нем есть одинаковые буквы
    (обычно в разном порядке).
    Не беспокойтесь о случае. Все входные данные будут в нижнем регистре.
"""


from collections import Counter


def anagram_difference(w1: str, w2: str) -> int:
    """
    Подсчитывает кол-во букв, убрав которые слова станут анаграммами.
    """
    return sum(map(len, (w1, w2))) - sum((Counter(w1) & Counter(w2)).values()) * 2


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        (('', ''), 0),
        (('a', ''), 1),
        (('', 'a'), 1),
        (('ab', 'a'), 1),
        (('ab', 'ba'), 0),
        (('ab', 'cd'), 4),
        (('codewars', 'hackerrank'), 10)
    )
    for key, val in data:
        assert anagram_difference(*key) == val


if __name__ == '__main__':
    test()
