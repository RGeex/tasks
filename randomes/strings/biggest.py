"""
Напишите функцию, которая, учитывая массив чисел >= 0, будет располагать их
так, чтобы они образовывали наибольшее число.

Например:

[1, 2, 3] --> "321" (3-2-1)
[3, 30, 34, 5, 9] --> "9534330" (9-5-34-3-30)

Результаты будут большими, поэтому обязательно верните строку.
"""


def biggest(nums: list[int]) -> str:
    """
    Составляет максимально возможное число из переданных чисел.
    """
    return str(int(''.join(sorted(map(str, nums), key=lambda x: x * 10, reverse=True))))


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        ([0, 0, 0, 0],'0'),
        ([1,2,3],'321'),
        ([121,12],'12121'),
        ([12,128],'12812'),
        ([5051,50],'505150'),
        ([10,101],'10110'),
        ([3, 30, 34, 5, 9],'9534330'),
        ([824, 938, 1399, 5607, 6973, 5703, 9609, 4398, 8247],'9609938824824769735703560743981399'),
        ([830,8308],'8308830'),
        ([3803,38,380],'383803803'),
    )
    for key, val in data:
        assert biggest(key) == val


if __name__ == '__main__':
    test()
