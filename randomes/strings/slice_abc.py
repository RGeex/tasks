"""
В этом ката вам нужно написать функцию, которая принимает два параметра: A и B,
оба представляют буквы английского алфавита.

Гарантируется, что:

    Обе буквы имеют одинаковый регистр (либо обе прописные, либо обе строчные, но не смесь).
    B всегда является буквой, которая идет после A в алфавите (или является той же буквой).
    Например, (A="A", B="F") и (A="g", B = "g") являются допустимыми наборами параметров для функции.
    С другой стороны (a="N" b="H") не является

Ваша задача, если вы согласны, — написать функцию слайс(), которая возвращает инклюзивный фрагмент
английского алфавита, начиная с А и заканчивая буквой Б. Для ясности приведем несколько примеров:

slice("A", "B") --> "AB"
slice("D", "H") --> "DEFGH"
slice("f", "f") --> "f"
slice("x", "z") --> "xyz"

Проницательные читатели, вероятно, подумают, что здесь может быть подвох, учитывая рейтинг Кю в этом Ката.
И вы ошибаетесь! Там не ОДИН подвох, не ДВА, А ТРИ подвоха (а-ха-ха)

    Ваш код может состоять максимум из двух строк.
    Длина вашего кода может составлять не более 100 символов.
    Наконец, вы не можете использовать в своем коде символы кавычек («и»), а также «str»
    или квадратные скобки.

(Примечание для участников: пожалуйста, сообщите мне, если я мог пропустить какой-либо хак,
который позволил бы существовать слишком тривиальному решению.)
"""


def slice_abc(a: str, b: str) -> str:
    """
    Фрагмент алфавина от заданной начально до заданной конечной букв,
    учитывая указанные дополнительные условия.
    """
    return a if a == b else a + slice_abc(chr(ord(a) + 1), b)


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        (("A","A"),"A"),
        (("l","l"),"l"),
        (("x","z"),"xyz"),
        (("k","o"),"klmno"),
        (("G","K"),"GHIJK"),
        (("A","F"),"ABCDEF"),
        (("a","z"),"abcdefghijklmnopqrstuvwxyz"),
    )
    for key, val in data:
        assert slice_abc(*key) == val


if __name__ == '__main__':
    test()
