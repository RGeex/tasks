"""
История

В 22022 году катастрофа уничтожила человечество. Команда инопланетных
археологов хотела узнать больше о языках людей. Однако когда дело
доходит до английского, они видят только буквы с цифрами. Вы – лидер
этой группы, своим мастером-инопланетянином-умом вы разобрались, что
числа означают сумму слов, теперь вам осталось только вычислить
значение каждого числа!
Задача

Напишите функцию со строковым параметром, состоящим ТОЛЬКО из строчных
букв и разделенных пробелами. Используйте тестовые примеры, чтобы
выяснить, что представляет собой каждое строчное значение, и верните
сумму слов в списке/кортеже (в зависимости от языка). Буквы представляют
значения от 1 до 26.
Вход

строка слов, разделенных пробелами.
Выход

Список/кортеж, представляющий сумму слов.
Пример

"i am fine thank you" ---> [24, 32, 73, 61, 32]

Предварительное условие

number of tests = 160
30<=number of words<=60
2<=length of words<=20

Примечания

    значения алфавитов расположены не в алфавитном порядке.
    любые переводы будут оценены!
    Вы определенно сможете определить значение каждого слова в примерах
    тестовых случаев, это гарантировано.
    Пытайтесь решить это ката только тогда, когда у вас есть хотя бы 1
    час времени.
"""


def sum_words(s: str) -> list[int]:
    """
    Замена слов суммой их чисел (определение по тестовым случаям).
    """
    return [sum(map('.njbdugczxoqtavkwypmhrleifs'.index, w)) for w in s.split()]


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        ('i am fine thank you', [24, 32, 73, 61, 32]),
        ('do you have a clue yet', [14, 32, 70, 13, 57, 52]),
        ('i bet some of you guys still got no idea', [24, 38, 78, 35, 32, 54, 106, 28, 11, 64]),
        ('gta san andreas', [31, 40, 101]),
        ('sensei believes in you', [123, 158, 25, 32]),
        ('if you want to give up look at test cases', [49, 32, 42, 22, 67, 23, 57, 25, 73, 95]),
        ('oddb cat doti getff ahhn', [21, 32, 50, 91, 54]),
        ('jhhib jkjkac anttle emcmd', [69, 54, 83, 72]),
        ('pigu que ner', [53, 39, 45]),
        ('stand uqe var llw lex aay zot', [56, 39, 48, 60, 54, 43, 30]),
    )
    for key, val in data:
        assert sum_words(key) == val


if __name__ == '__main__':
    test()
