"""
В этой ката два игрока, Алиса и Боб, играют в палиндром.
Алиса начинает с string1, Боб начинает с string2, и доска начинается с
пустой строки. Алиса и Боб по очереди; во время хода игрок выбирает букву
из своей строки, удаляет ее из строки и добавляет на доску; если доска
становится палиндромом (длиной >= 2), игрок выигрывает. Алиса делает
первый шаг. Поскольку у Боба есть недостаток: он играет вторым, то он
автоматически выигрывает, если буквы закончатся или доска никогда не
станет палиндромом. Также обратите внимание, что каждый игрок может
видеть буквы другого игрока.

Проблема будет представлена ​​как solve(string1,string2). Возвращает 1,
если выигрывает Алиса, и 2, если выигрывает Боб.
"""


def winner_palindromes(s1: str, s2: str) -> int:
    """
    Определяет победителя в игре с палиндромами.
    """
    return next((1 for w in set(s1) if s1.count(w) > 1 and w not in s2), 2)


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        (('abc', 'xyz'), 2),
        (('abc', 'axy'), 2),
        (('abc', 'bax'), 2),
        (('btzgd', 'svjyb'), 2),
        (('eyfjy', 'ooigv'), 1),
        (('mctimp', 'eyqbnh'), 1),
        (('qtkxttl', 'utvohqk'), 2),
    )
    for key, val in data:
        assert winner_palindromes(*key) == val


if __name__ == '__main__':
    test()
