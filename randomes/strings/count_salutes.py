"""
Есть узкий коридор, в котором люди могут идти только направо и налево.
Когда двое людей встречаются в коридоре, по традиции они должны отдать
друг другу честь. Люди движутся с одинаковой скоростью влево и вправо.

Ваша задача — написать функцию, которая, имея строковое представление людей,
движущихся по коридору, будет подсчитывать количество произведённых салютов.
Примечание : 2Приветствия происходят, когда люди встречаются, друг другу и наоборот.
Вход

Люди, движущиеся вправо, будут представлены >; люди, движущиеся влево, будут представлены <.
Примером ввода может быть >--<--->->. -символ представляет собой пустое пространство,
о котором вам не нужно беспокоиться.
Примеры

Вход: >----->-----<--<
Выход: 8

Пояснение: Оба парня, движущиеся вправо, встретятся с двумя парнями, движущимися влево.
Таким образом, в общей сложности 4встречи будут происходить и 8будут звучать салюты.

Вход: <---<--->----<
Выход: 2

Пояснение: Происходит только одна встреча.
"""
import typing
import unittest


def count_salutes(hallway: str) -> int:
    """
    Вычисляет кол-во салютов.
    """
    return sum(hallway[i:].count('<') * 2 for i, x in enumerate(hallway, 1) if x == '>')


def test(func: typing.Callable, data: tuple[tuple[typing.Any, typing.Any]]) -> None:
    """Тестирование работы алгоритмов с помощью unittest."""

    def test_func(func: typing.Callable, key: typing.Any, val: typing.Any) -> typing.Callable:
        """Создает кейсы для тестирования."""
        return lambda self: self.assertEqual(func(key), val)

    funcs = {f'test_{i}': test_func(func, key, val) for i, (key, val) in enumerate(data, 1)}
    suite = unittest.TestLoader().loadTestsFromTestCase(type('Tests', (unittest.TestCase,), funcs))

    unittest.TextTestRunner().run(suite)


if __name__ == '__main__':
    test(count_salutes, (
        ('>--->---<--<', 8),
        ('<----<---<-->', 0),
        ('>-<->-<', 6),
    ))
