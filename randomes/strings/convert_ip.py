"""

Адрес IPv4 — это 32-битное число, которое идентифицирует устройство в Интернете.
В то время как компьютеры читают и записывают IP-адреса как 32-битное число,
мы предпочитаем читать их в точечно-десятичной нотации, которая в основном
представляет собой число, разбитое на 4 части по 8 бит, преобразованное в
десятичное число и разделенное точкой.

Написать две функции:
- ip_to_num, которая берет IP-адрес и преобразует его в число
- num_to_ip, которая берет число и преобразует его в строку IP-адреса.

Ввод всегда будет действительным.
"""


def ip_to_num(ip: str) -> int:
    """Конвертирует ip из строки в 32-битное число"""
    return int(''.join([bin(int(x))[2:].zfill(8) for x in ip.split('.')]), 2)


def num_to_ip(num: int) -> str:
    """Конвертирует ip из 32-битного числа в строку"""
    return '.'.join([str(int(bin(num)[2:].zfill(32)[x*8:x*8+8], 2)) for x in range(4)])


def test() -> None:
    """Тестирование работы алгоритмов."""

    data1 = (
        ('0.0.0.0', 0),
        ('10.0.0.0', 167772160),
        ('0.152.13.172', 9964972),
        ('176.16.0.1', 2953838593),
        ('192.168.1.1', 3232235777),
        ('255.255.255.255', 2 ** 32 - 1),
    )

    for key, val in data1:
        assert ip_to_num(key) == val

    data2 = (
        (0, '0.0.0.0'),
        (167772160, '10.0.0.0'),
        (9964972, '0.152.13.172'),
        (2953838593, '176.16.0.1'),
        (3232235777, '192.168.1.1'),
        (2 ** 32 - 1, '255.255.255.255'),
    )

    for key, val in data2:
        assert num_to_ip(key) == val


if __name__ == '__main__':
    test()
