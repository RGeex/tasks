"""
Массив сортируется по кругу , если элементы отсортированы в порядке возрастания, но смещены или
повернуты на любое количество шагов.

Завершите функцию/метод, определяющую, отсортирован ли заданный массив целых чисел циклически.
Примеры

Эти массивы сортируются циклически ( true):

[2, 3, 4, 5, 0, 1]       -->  [0, 1] + [2, 3, 4, 5]
[4, 5, 6, 9, 1]          -->  [1] + [4, 5, 6, 9]
[10, 11, 6, 7, 9]        -->  [6, 7, 9] + [10, 11]
[1, 2, 3, 4, 5]          -->  [1, 2, 3, 4, 5]
[5, 7, 43, 987, -9, 0]   -->  [-9, 0] + [5, 7, 43, 987]
[1, 2, 3, 4, 1]          -->  [1] + [1, 2, 3, 4]

Хотя их нет( false):

[4, 1, 2, 5]
[8, 7, 6, 5, 4, 3]
[6, 7, 4, 8]
[7, 6, 5, 4, 3, 2, 1]
"""


def circularly_sorted(arr: list) -> bool:
    """
    Проверяет отсортирован ли массив по кругу или нет.
    """
    tmp = [arr[len(arr) - 1] < arr[i - 1] for i, x in enumerate(arr) if i and x < arr[i - 1]]
    return 0 not in tmp and sum(tmp) in (0, 1)


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        ([2, 3, 4, 5, 0, 1], True),
        ([4, 5, 6, 9, 1], True),
        ([10, 11, 6, 7, 9], True),
        ([1, 2, 3, 4, 5], True),
        ([5, 7, 43, 987, -9, 0], True),
        ([1, 2, 3, 4, 1], True),
        ([4, 1, 2, 5], False),
        ([8, 7, 6, 5, 4, 3], False),
        ([6, 7, 4, 8], False),
        ([7, 6, 5, 4, 3, 2, 1], False),
    )
    for key, val in data:
        assert circularly_sorted(key) == val


if __name__ == '__main__':
    test()
