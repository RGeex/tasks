"""
Задача о максимальной сумме подмассива состоит в нахождении максимальной
суммы непрерывной подпоследовательности в массиве или списке целых чисел:

max_sequence([-2, 1, -3, 4, -1, 2, 1, -5, 4])
# должно быть 6: [4, -1, 2, 1]

Простой случай — это когда список состоит только из положительных чисел,
а максимальная сумма — это сумма всего массива. Если список состоит только
из отрицательных чисел, вместо этого верните 0.

Пустой список считается имеющим нулевую наибольшую сумму. Обратите внимание,
что пустой список или массив также является допустимым подсписком/подмассивом.
"""


def max_sequence(arr: list) -> int:
    """Поиск максимальной суммы подмассива."""
    cur, res = float('-inf'), []
    for i, v in enumerate(arr, 1):
        cur = v if cur + v < v else cur + v
        if cur > cur - v or len(arr) == i:
            res.append(cur)

    return max(res) if res and max(res) > 0 else 0


def test() -> None:
    """Тестирование работы алгоритмов."""
    arr1 = []
    arr2 = [-2, 1, -3, 4, -1, 2, 1, -5, 4]

    assert max_sequence(arr1) == 0
    assert max_sequence(arr2) == 6


if __name__ == '__main__':
    test()
