"""
Когда два блока одного и того же «типа» соседствуют друг с другом,
весь смежный блок исчезает (выскакивает). Если это произойдет, это
может позволить ранее разделенным блокам вступить в контакт друг с
другом, вызывая цепную реакцию. После каждого извлечения оставшиеся
элементы отодвигаются назад перед извлечением следующих
последовательных элементов.

Это будет продолжаться до тех пор, пока каждый блок не будет окружен
другим блоком. Если в первом раунде есть несколько выталкиваемых
блоков, выталкивайте их, начиная слева.
"""

from itertools import groupby


def pop_blocks(lst: list) -> list:
    """
    Исключает подстоки идущих подряд одинаковых символов.
    """
    a, b = next(((i, i + x) for i, (_, n) in enumerate(groupby(lst)) if (x := len(list(n))) != 1), (0, 0))
    return pop_blocks(lst[:a] + lst[b:]) if a or b else lst


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        ([], []),
        (['B', 'B', 'A', 'C', 'A', 'A', 'C'], ['A']),
        (['B', 'B', 'C', 'C', 'A', 'A', 'A'], []),
        (['C', 'A', 'C'], ['C', 'A', 'C']),
        (['C', 'A', 'A', 'C', 'B'], ['B']),
        (['ab', 'ab', 'cd', 'cx', 'B'], ['cd', 'cx', 'B']),
        (['C', 'C'], []),
        (['A', 'B', 'C', 'C', 'B', 'D', 'A'], ['A', 'D', 'A']),
        (['A', 'B', 'A', 'A', 'A', 'B', 'B'], ['A']),
        (['D', 'B', 'C', 'D', 'D', 'D', 'C', 'B', 'C', 'D'], ['D', 'C', 'D']),
        (['A', 'A', 'AB'], ['AB']),
        (['A', 'B', 'B', 'A', 'AB'], ['AB']),
        (['A', 'AB', 'AB', 'A'], []),
    )
    for key, val in data:
        assert pop_blocks(key) == val


if __name__ == '__main__':
    test()
