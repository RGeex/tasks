"""
Получив 2D-массив некоторых подвешенных блоков (представленных в виде хэштегов),
верните другой 2D-массив, который показывает конечный результат после включения
гравитации. 

Примечания:
Каждый блок падает индивидуально, то есть нет жестких объектов.
Думайте об этом как о падающем песке в Minecraft, а не о жестких блоках в Tetris.
"""


def switch_gravity(lst: tuple[list]) -> tuple[list]:
    """Гравитация для падающих блоков."""
    return tuple(map(list, zip(*map(sorted, zip(*lst)))))[::-1]


def test() -> None:
    """Тестирование работы алгоритмов."""

    data = (
        (
            (
                ["-", "#", "#", "-"],
                ["-", "-", "-", "-"],
                ["-", "-", "#", "-"],
                ["-", "-", "-", "-"],
            ),
            (
                ["-", "-", "-", "-"],
                ["-", "-", "-", "-"],
                ["-", "-", "#", "-"],
                ["-", "#", "#", "-"],
            ),
        ),
        (
            (
                ["-", "#", "#", "#", "#", "-"],
                ["#", "-", "-", "#", "#", "-"],
                ["-", "#", "-", "-", "-", "-"],
                ["-", "-", "-", "-", "-", "-"],
            ),
            (
                ["-", "-", "-", "-", "-", "-"],
                ["-", "-", "-", "-", "-", "-"],
                ["-", "#", "-", "#", "#", "-"],
                ["#", "#", "#", "#", "#", "-"],
            ),
        ),
    )

    for key, val in data:
        assert switch_gravity(key) == val


if __name__ == '__main__':
    test()
