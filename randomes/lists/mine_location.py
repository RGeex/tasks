"""
Вы только что обнаружили квадратное поле (NxN) и заметили предупреждающий знак.
На знаке указано, что в двумерном решетчатом поле перед вами находится одна
бомба.

Напишите функцию mineLocation/ MineLocationкоторый принимает 2D-массив и
возвращает местоположение шахты. Мина представлена ​​как целое число 1в
2D-массиве. Области 2D-массива, не являющиеся шахтой, будут представлены как
0с.

Возвращаемое местоположение должно быть массивом
( Tuple<int, int>в С#, RAX:RDXв NASM), где первый элемент — это индекс строки,
а второй элемент — индекс столбца местоположения бомбы
(оба должны начинаться с 0).
Все двумерные массивы, переданные в вашу функцию, будут квадратными (NxN), и в
массиве будет только один мой.
Примеры:

mineLocation( [ [1, 0, 0], [0, 0, 0], [0, 0, 0] ] )=> возвращает [0, 0]
mineLocation( [ [0, 0, 0], [0, 1, 0], [0, 0, 0] ] )=> возвращает [1, 1]
mineLocation( [ [0, 0, 0], [0, 0, 0], [0, 1, 0] ] )=> возвращает [2, 1]
"""

def mine_location(field: list[list[int]]) -> list[int]:
    """
    Поиск координам бомбы в вдумерном массиве.
    """
    return next([i, x.index(1)] for i, x in enumerate(field) if any(x))


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        ([ [1, 0], [0, 0] ], [0, 0]),
        ([ [1, 0, 0], [0, 0, 0], [0, 0, 0] ], [0, 0]),
        ([ [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0], [0, 0, 0, 0] ], [2, 2]),
    )
    for key, val in data:
        assert mine_location(key) == val


if __name__ == '__main__':
    test()
