"""
Вы работаете в цифровом зоопарке, и кажется, что один из номеров пропал!

Работники зоопарка понятия не имеют, какого числа не хватает, и слишком
некомпетентны, чтобы это выяснить, поэтому нанимают вас, чтобы вы сделали
это за них.

В случае, если зоопарк потеряет еще один номер, они хотят, чтобы ваша
программа работала независимо от того, сколько всего номеров.
Задача:

Напишите функцию, которая принимает перетасованный список уникальных чисел из
1к nс отсутствующим одним элементом (который может быть любым числом, включая n).
Верните это недостающее число.

Примечание : будут проверены огромные списки.
Примеры:

[1, 3, 4]  =>  2
[1, 2, 3]  =>  4
[4, 2, 3]  =>  1
"""


def find_missing_number(numbers: list[int]) -> int:
    """
    Поиск недостающего числа в списке.
    """
    return ([*(set(range(1, len(numbers) + 1)) - set(numbers))] or [len(numbers) + 1])[0]


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        ([2, 3, 4], 1),
        ([1, 3, 4], 2),
        ([1, 2, 4], 3),
        ([1, 2, 3], 4),
    )
    for key, val in data:
        assert find_missing_number(key) == val


if __name__ == '__main__':
    test()
