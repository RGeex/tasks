"""
Напишите функцию, которая, если задано число >= 0, возвращает массив подмассивов
возрастающей длины.

pyramid(0) => [ ]
pyramid(1) => [ [1] ]
pyramid(2) => [ [1], [1, 1] ]
pyramid(3) => [ [1], [1, 1], [1, 1, 1] ]

Примечание: подмассивы должны быть заполнены 1с
"""


def pyramid(n: int) -> list:
    """
    Создает возрастающую пирамиду из списков.
    """
    return [[1] * i for i in range(1, n + 1)]


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        (0, []),
        (1, [[1]]),
        (2, [[1], [1, 1]]),
        (3, [[1], [1, 1], [1, 1, 1]]),
    )
    for key, val in data:
        assert pyramid(key) == val


if __name__ == '__main__':
    test()
