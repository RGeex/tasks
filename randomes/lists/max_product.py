"""
Задача

Учитывая массив /список [] целых чисел , найдите произведение k максимальных чисел.
Примечания

    массива/списка Размер не менее 3 .

    Числа массива/списка будут представлять собой смесь положительных, отрицательных и нулевых значений.

    Может произойти повторение чисел в массиве/списке .

Ввод >> Примеры вывода

maxProduct ({4, 3, 5}, 2) ==>  return (20)

Объяснение :

    Поскольку размер (k) равен 2 , то подпоследовательность размера 2 , дающая произведение
    максимумов , равна 5 * 4 = 20 .

maxProduct ({8, 10 , 9, 7}, 3) ==>  return (720)

Объяснение :

    Поскольку размер (k) равен 3 , то подпоследовательность размера 3 , дающая произведение
    максимумов , равна  8 * 9 * 10 = 720 .

maxProduct ({10, 8, 3, 2, 1, 4, 10}, 5) ==> return (9600)

Объяснение :

    Поскольку размер (k) равен 5 , то подпоследовательность размера 5 , дающая произведение
    максимумов , равна  10 * 10 * 8 * 4 * 3 = 9600 .

maxProduct ({-4, -27, -15, -6, -1}, 2) ==> return (4)

Объяснение :

    Поскольку размер (k) равен 2 , то подпоследовательность размера 2 , дающая произведение
    максимумов , равна  -4 * -1 = 4 .

maxProduct ({10, 3, -1, -27} , 3)  return (-30)

Объяснение :

    Поскольку размер (k) равен 3 , то подпоследовательность размера 3 , дающая произведение
    максимумов , равна 10 * 3 * -1 = -30 .
"""

from operator import mul
from functools import reduce


def max_product(lst: list, k: int) -> int:
    """
    Произведение максимальных k значений.
    """
    return reduce(mul, sorted(lst)[-k::])


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        (([0]*10, 5), 0),
        (([4, 3, 5], 2), 20),
        (([10, 8, 7, 9], 3), 720),
        (([8, 6, 4, 6], 3), 288),
    )
    for key, val in data:
        assert max_product(*key) == val


if __name__ == '__main__':
    test()
