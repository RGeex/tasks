"""
Тебе дали Nверевки, где длина каждой веревки представляет собой целое
положительное число. На каждом шаге вам придется уменьшать все веревки
на длину самой маленькой веревки.

Шаг будет повторяться до тех пор, пока не останется веревок. Учитывая
длину N веревок, выведите количество веревок, оставшихся перед каждым шагом.

Пример
Для a = [3, 3, 2, 9, 7], результат должен быть [5, 4, 2, 1]

You have 5 ropes:
                 3 3 2 9 7   ( 5 left)

step 1:          1 1 0 7 5   ( 4 left)

step 2:          0 0 0 6 4   ( 2 left)

step 3:          0 0 0 0 2   ( 1 left)

step 4:          0 0 0 0 0

Hence the result is [5, 4, 2, 1]
"""


from collections import Counter


def cut_the_ropes(arr: list[int]) -> list:
    """
    Поиск кол-ва шагов равномерного уменьшения массива.
    """
    temp = [x[1] for x in sorted(Counter(arr).items())]
    return [sum(temp[i:]) for i in range(len(temp))]


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        ([3, 3, 2, 9, 7], [5, 4, 2, 1]),
        ([1, 2, 3, 4, 3, 3, 2, 1], [8, 6, 4, 1]),
        ([13035, 6618, 13056, 20912, 1119, 13035, 6618,
          6618, 8482, 13056], [10, 9, 6, 5, 3, 1]),
        ([9, 9, 9, 9, 7], [5, 4]),
        ([3, 3, 2, 9, 7], [5, 4, 2, 1]),
    )
    for key, val in data:
        assert cut_the_ropes(key) == val


if __name__ == '__main__':
    test()
