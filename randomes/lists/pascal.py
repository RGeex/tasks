"""
Вашей функции будет передана глубина треугольника, и ваш код должен вернуть
соответствующий треугольник Паскаля до этой глубины.

Треугольник должен быть возвращен как вложенный массив. Например:

pascal(5) -> [ [1], [1,1], [1,2,1], [1,3,3,1], [1,4,6,4,1] ]

Чтобы построить треугольник, начните с одного 1 вверху для каждого числа в
следующей строке вы просто берете два числа над ним и складываете их вместе,
за исключением ребер, которые все 1. например.:

      1
    1   1
  1   2   1
1   3   3   1
"""


def pascal(n: int) -> list[list[int]]:
    """
    Создает список элементов треугольника Паскаля.
    """
    return [(l := [1] + [sum(x) if i else 1 for i, x in enumerate(zip(l, l[1:] + [0]), -len(l))] if i else [1]) for i in range(n)]


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        (1, [[1]]),
        (5, [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]),
    )
    for key, val in data:
        assert pascal(key) == val


if __name__ == '__main__':
    test()
