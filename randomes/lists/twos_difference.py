"""
Цель состоит в том, чтобы вернуть все пары целых чисел из заданного массива
целых чисел, разница которых равна 2.

Массив результатов следует отсортировать в порядке возрастания значений.

Предположим, что в массиве нет повторяющихся целых чисел. Порядок целых чисел
во входном массиве не имеет значения.
Примеры

[1, 2, 3, 4]  should return [(1, 3), (2, 4)]

[4, 1, 2, 3]  should also return [(1, 3), (2, 4)]

[1, 23, 3, 4, 7] should return [(1, 3)]

[4, 3, 1, 5, 6] should return [(1, 3), (3, 5), (4, 6)]
"""


from itertools import combinations


def twos_difference(lst: list[int]) -> list[tuple]:
    """
    Поиск пар значений заданного списка, разница значений которых равна 2, Отсортированных
    по возрастанию значений.
    """ 
    return sorted([tuple(sorted((a, b))) for a, b in combinations(lst, 2) if abs(a - b) == 2])


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        ([1, 2, 3, 4], [(1, 3), (2, 4)]),
        ([1, 3, 4, 6], [(1, 3), (4, 6)]),
        ([0, 3, 1, 4], [(1, 3)]),
        ([4, 1, 2, 3], [(1, 3), (2, 4)]),
        ([6, 3, 4, 1, 5], [(1, 3), (3, 5), (4, 6)]),
        ([3, 1, 6, 4], [(1, 3), (4, 6)]),
        ([1, 3, 5, 6, 8, 10, 15, 32, 12, 14, 56], [(1, 3), (3, 5), (6, 8), (8, 10), (10, 12), (12, 14)]),
        ([1, 4, 7, 10], []),
        ([], []),
    )
    for key, val in data:
        assert twos_difference(key) == val


if __name__ == '__main__':
    test()
