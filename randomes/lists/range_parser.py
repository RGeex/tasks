"""
Реализовать функцию, которая анализирует строку, состоящую из токенов
вида «n1-n2,n3,n4-n5:n6», где «nX» — положительное целое число. Каждый
токен представляет отдельный диапазон:

'n1-n2' представляет диапазон от n1 до n2 (включительно с обоих концов).
'n3' представляет собой одно целое число n3. 'n4-n5:n6' представляет
диапазон от n4 до n5 (включительно с обоих концов), но включает только
все остальные целые числа n6.

Примечания:

    Входная строка не обязательно должна включать все типы токенов.
    Все целые числа считаются положительными.
    Токены могут быть разделены ',', ', 'или ,.

Некоторые примеры:

'1-10,14, 20-25:2' -> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 20, 22, 24]

'5-10' -> [5, 6, 7, 8, 9, 10]

'2' -> [2]

Результатом должен быть список целых чисел.
"""


def range_parser(s: str) -> list:
    """
    Парсит строку диапазонов, создавая на ее основе список.
    """
    r = []
    for n in [x.replace(':', '-').split('-') for x in s.replace(' ', '').split(',')]:
        r.extend(range(*[(int(v) + i % 2) for i, v in enumerate(n*[1, 2][len(n) == 1])]))
    return r


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        ('1-10,14, 20-25:2', [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 20, 22, 24]),
        ('5-10',             [5, 6, 7, 8, 9, 10]),
        ('2',                [2]),
    )
    for key, val in data:
        assert range_parser(key) == val


if __name__ == '__main__':
    test()
