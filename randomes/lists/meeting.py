"""
Итак, вы нашли конференц-зал – уф! Вы приходите туда, готовые провести
презентацию, и обнаруживаете, что кто-то занял один или несколько
стульев!! Вам нужно быстро найти что-нибудь.... проверьте все остальные
конференц-залы, чтобы убедиться, что все стулья заняты.

Ваш конференц-зал может занять до 8 стулья. needскажет вам, сколько было
взято. Вам нужно найти столько.

Найдите запасные стулья во множестве конференц-залов. В каждом кортеже
конференц-зала будет указано количество участников в виде строки.
Каждый житель представлен 'X'. В кортеже комнаты также будет целое
число, сообщающее вам, сколько стульев в комнате.

Вы должны вернуть массив целых чисел, показывающий, сколько стульев вы
берете по порядку из каждой комнаты, пока не соберете необходимое количество.

пример:

[['XXX', 3], ['XXXXX', 6], ['XXXXXX', 9], ['XXX',2]] когда ты нуждаешься 4
стулья:

result -> [0, 1, 3] в номере 0 свободных стульев нет, берите 1 из комнаты 1
возьмите 3 из комнаты 2. Нет необходимости рассматривать комнату 3, так как
у вас есть 4 стулья уже.

Если вам не нужны стулья, верните "Game On". Если свободных стульев
недостаточно, верните "Not enough!".
"""


def meeting(rooms: list[list[str, int]], need: int) -> list[int] | str:
    """
    Определяет требуемое кол-во стульев.
    """
    res = []
    for a, b in rooms:
        if sum(res) < need:
            res.append(max(min(b - len(a), need - sum(res)), 0))
    return ('Not enough!' if sum(res) < need else res) if res else 'Game On'


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        (([["XXX", 3], ["XXXXX", 6], ["XXXXXX", 9]], 4), [0, 1, 3]),
        (([["XXX", 1], ["XXXXXX", 6], ["X", 2], ["XXXXXX", 8], ["X", 3], ["XXX", 1]], 5), [0, 0, 1, 2, 2]),
        (([["XX", 2], ["XXXX", 6], ["XXXXX", 4]], 0), "Game On"),
        (([["XX", 2], ["XXXX", 6], ["XXXXX", 4]], 8), "Not enough!"),
        (([["XX", 2], ["XXXX", 6], ["XXXXX", 4]], 2), [0, 2]),
    )
    for key, val in data:
        assert meeting(*key) == val


if __name__ == '__main__':
    test()
