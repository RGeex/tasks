"""
Учитывая строковые представления двух целых чисел,
верните строковое представление суммы этих целых чисел.

Например:
sumStrings('1','2') // => '3'

Строковое представление целого числа не будет содержать
никаких символов, кроме десяти цифр от «0» до «9».

Я удалил использование BigIntegerи BigDecimalв Яве

Питон: ваше решение должно работать с огромными числами
(около миллиона цифр), преобразование в int не сработает.
"""


def sum_strings(x: str, y: str) -> str:
    """
    Сложение в столбик.
    """
    x, y = x.lstrip('0'), y.lstrip('0')

    res, ln, a = '', max(len(x), len(y)), 0
    x, y = x.zfill(ln), y.zfill(ln)

    for i in range(ln - 1, -1, -1):
        a, b = divmod(ord(x[i]) + ord(y[i]) - 96 + a, 10)
        res += str(b)

    return '1' * a + res[::-1] or '0'


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        (('', ''), '0'),
        (('', '0'), '0'),
        (('01', ''), '1'),
        (('1', '1'), '2'),
        (('30', ''), '30'),
        (('300', ''), '300'),
        (('00000', '5'), '5'),
        (('12', '389'), '401'),
        (('12', '989'), '1001'),
        (('123', '456'), '579'),
    )
    for key, val in data:
        assert sum_strings(*key) == val


if __name__ == '__main__':
    test()
