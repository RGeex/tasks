"""
Вы хотите построить стандартный карточный домик, но не знаете, сколько карточек вам понадобится.
Напишите программу, которая будет подсчитывать минимальное количество карточек в зависимости
от желаемого количества этажей. Например, если вам нужен одноэтажный дом,
вам понадобится 7 штук (две пары по две карты на базовом этаже,
одна горизонтальная карта и одна пара для получения первого этажа).
Здесь вы можете увидеть, какой карточный домик я имею в виду:

One floor:

 /\
 —
/\/\

Four floors:

    /\
    —
   /\/\
   — —
  /\/\/\
  — — —
 /\/\/\/\
 — — — —
/\/\/\/\/\


Примечание по этажам:

В этом ката используется британская система нумерации этажей. Если вы хотите, чтобы в вашем
карточном домике был первый этаж, ему нужен первый этаж, а затем второй этаж над ним. 
"""


def house_of_cards(n: int) -> int:
    """
    Подсчитывает минимальное кол-во карт, которые требуются, что бы составить
    карточный домик, заданной этажности по британкской системе нумерации.
    """
    return [-1, sum(x * (x + 1) // 2 * i for i, x in enumerate((n, n + 1), 1))][n > 0]


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        (1, 7),
        (0, -1),
        (2, 15),
        (3, 26),
        (6, 77),
        (-1, -1),
        (15, 392),
    )
    for key, val in data:
        assert house_of_cards(key) == val


if __name__ == '__main__':
    test()
