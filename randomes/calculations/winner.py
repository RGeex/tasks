"""
Стиву и Джошу скучно, и они хотят во что-нибудь поиграть. Они не хотят слишком много думать,
поэтому придумывают очень простую игру. Напишите функцию Winner и выясните, кто победит.

Им раздается одинаковое количество карт. Они оба переворачивают карту сверху своей колоды.
Тот, у кого есть карта с более высоким значением, побеждает в раунде и получает одно очко
(если карты одного достоинства, ни одна из них не получает очко).
После этого две карты сбрасываются, и они переворачивают еще одну карту с верха своей колоды.
Они делают это до тех пор, пока у них не останется карт.

deckSteveи deckJoshпредставляют собой массивы, представляющие их колоды. Они заполнены карточками,
представленными одним персонажем. Ранг карты следующий (от низшего к высшему):

'2','3','4','5','6','7','8','9','T','J','Q','K','A'

Каждая карта может появляться в колоде более одного раза. Выясним, кто выиграет, и ответим,
кто выиграет и с каким счетом:

    "Steve wins x to y"если Стив победит; где xэто оценка Стива, yэто результат Джоша;
    "Josh wins x to y"если Джош победит; где xэто результат Джоша, y— оценка Стива;
    "Tie"если в конце игры счет ничейный.

Пример

    Стиву раздали: ['A','7','8']
    Джошу раздали: ['K','5','9']

    В первом раунде туз побеждает короля, и Стив получает одно очко.
    Во втором раунде 7 побеждает 5 и Стив получает второе очко.
    В третьем раунде 9 побеждает 8, и Джош получает одно очко.

Итак, вы должны вернуться: "Steve wins 2 to 1"
"""
from operator import lt, eq
from collections import Counter


def winner(d1: list[str], d2: list[str]) -> str:
    """
    Определяет победителя в карточной игре, придуманной игроками.
    """
    val = {k: v for v, k in enumerate('TJQKA', 10)}
    res = Counter([lt(*[int(val.get(k, k)) for k in x]) for x in zip(d1, d2) if not eq(*x)])
    tmp = res and max(res.items(), key=lambda x: x[1])
    return (not tmp or (len(res) == 2 and eq(*res.values()))) and 'Tie' or f'{["Steve", "Josh"][tmp[0]]} wins {tmp[1]} to {res.get(not tmp[0], 0)}'


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        ((["A", "7", "8"], ["K", "5", "9"]), "Steve wins 2 to 1"),
        ((["T"], ["T"]), "Tie"),
        ((["K", "T"], ["T", "K"]), "Tie"),
        ((["T", "8"], ["T", "9"]), "Josh wins 1 to 0"),
    )
    for key, val in data:
        assert winner(*key) == val


if __name__ == '__main__':
    test()
