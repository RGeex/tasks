"""
Создайте функцию, которая принимает положительное целое число
и возвращает следующее большее число, которое можно получить
путем перестановки его цифр. Например:

  12 ==> 21
 513 ==> 531
2017 ==> 2071

Если цифры не могут быть переставлены так, чтобы образовать
большее число, верните -1(или nilв Свифте, Noneв Русте):

  9 ==> -1
111 ==> -1
531 ==> -1
"""


def next_bigger(n: int) -> int:
    """
    Следующее за текущим число, путем перестановки цифр.
    """
    s = str(n)[::-1]
    for i, x in enumerate(s):
        a, b = '0123456789'[int(x) + 1:], s[:i]
        m = min(set(a) & set(b), default='0')
        if x < m:
            return int(''.join([*sorted(s[:i+1].replace(m, '', 1))[::-1], m, s[i+1:]])[::-1])
    return -1


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        (12, 21),
        (21, -1),
        (513, 531),
        (414, 441),
        (144, 414),
        (2017, 2071),
        (1944, 4149),
        (1234567890, 1234567908),
        (846494521944, 846494524149),
    )
    for key, val in data:
        assert next_bigger(key) == val


if __name__ == '__main__':
    test()
