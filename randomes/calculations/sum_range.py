"""
Галактические игры начались!

Это галактические игры! Существа со всех миров собираются вместе,
чтобы соревноваться в нескольких интересных видах спорта, таких
как нрогринг, фредлинг и жужжание (бифолки любят последний).
Однако есть и традиционный марафонский забег.

К сожалению, в последние годы появились читеры, и комитет решил
разместить на трассе датчики. Комитеты есть комитеты, они
выработали следующее правило:

    Датчик должен быть установлен через каждые 3 и 5 метров от
    старта, например на 3м, 5м, 6м, 9м, 10м, 12м, 15м, 18м....

Поскольку вы отвечаете за трассу, вам нужно купить эти датчики.
Хуже того, вы не знаете, какой длины будет трек! А поскольку
треков может быть больше, чем одна, и вам не хочется делать
все это вручную, вы решаете вместо этого написать программу.
Задача

Возвращает сумму кратных 3 и 5 под числом. В галактических играх
треки могут быть довольно большими, поэтому ваше решение должно
работать для действительно больших чисел (более 1 000 000).

Примеры:
solution (10) # => 23 = 3 + 5 + 6 + 9
solution (20) # => 78 = 3 + 5 + 6 + 9 + 10 + 12 + 15 + 18
"""


def sum_range(num: int) -> int:
    """
    Подсчет суммы чисел кратных 3 и 5 лежащих в заданном диапазоне.
    """
    return sum(i for i in range(3, num) if not i % 3 or not i % 5)


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        (10, 23),
        (20, 78),
        (100, 2318),
        (200, 9168),
        (1000, 233168),
        (10000, 23331668),
    )
    for key, val in data:
        assert sum_range(key) == val


if __name__ == '__main__':
    test()
