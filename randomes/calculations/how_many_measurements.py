"""
Только сегодня я нашел этот интересный вопрос для интервью:

    Даны 8 монет, где все монеты имеют одинаковый вес, кроме одной. Один из них весит меньше
    остальных, поскольку он не из чистого золота. В худшем случае, сколько итераций на самом
    деле потребуется, чтобы найти лишнюю единицу в масштабе двух тарелок ?

Тогда я прошу вас сказать мне, какое минимальное количество взвешиваний потребуется для измерения.
n монеты во всех возможных случаях (включая худший сценарий, т.е. вообще не полагаясь на удачу).

nгарантированно будет положительным целым числом.

Совет: умение рекурсивно мыслить :p здесь может помочь

Примечание: хотя это скорее логическая проблема, чем проблема кодирования, не стоит недооценивать
(или недооценивать) ката из-за того, что они не обязательно требуют навыков кодирования класса
волшебника: хороший программист - мастер распознавания образов и последующей оптимизации;)s
"""


def how_many_measurements(n: int) -> int:
    """
    Минимальное кол-во взвешиваний (в худшем случае) для определения монеты с мин весом.
    """
    return next((x for x in range(1, n) if x == 1 and n < 4 or not (n := int(n * 1/3))), 0)


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        (1, 0),
        (2, 1),
        (3, 1),
        (8, 2),
        (100, 5),
        (430, 6),
    )
    for key, val in data:
        assert how_many_measurements(key) == val


if __name__ == '__main__':
    test()
