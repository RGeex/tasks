"""
Представьте себе треугольник чисел, который соответствует такому шаблону:

    Начиная с цифры «1», цифра «1» располагается в верхней части треугольника.
    Поскольку это первая строка, она может поддерживать только одно число.
    Вторая строка может поддерживать следующие 2 цифры: «2» и «3».
    Аналогично, 3-я строка может поддерживать только следующие 3 цифры: «4», «5», «6».
    И так далее; эта закономерность продолжается.

    1
   2 3
  4 5 6
 7 8 9 10
...

Учитывая N, верните сумму всех чисел в N-й строке:

1 <= N <= 10 000
"""


def cumulative_triangle(n: int) -> int:
    """
    Сумма ряда треугольных чисел.
    """
    return (n ** 3 + n) // 2


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        (1, 1),
        (3, 15),
        (4, 34),
    )
    for key, val in data:
        assert cumulative_triangle(key) == val


if __name__ == '__main__':
    test()
