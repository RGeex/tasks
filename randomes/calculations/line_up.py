"""
Задача

Чтобы подготовить своих учеников к предстоящей игре, спортивный тренер решает попробовать новые
тренировочные упражнения. Для начала он выстраивает их в ряд и начинает со следующего
разминочного упражнения:

when the coach says 'L', he instructs the students to turn to the left.
Alternatively, when he says 'R', they should turn to the right.
Finally, when the coach says 'A', the students should turn around.

К сожалению, некоторые ученики (не все, но по крайней мере один) не могут отличить лево от права,
то есть они всегда поворачивают направо, когда слышат «Л», и налево, когда слышат «Р».
Тренер хочет знать, сколько раз ученики оказывались лицом в одном и том же направлении.

Учитывая список команд, данных тренером, подсчитайте количество таких команд, после которых ученики
повернутся лицом в одну и ту же сторону.
Пример

Для команд = "LLARL" вывод должен быть 3.

Допустим, есть 4 ученика, и второй не может отличить лево от право. В этом случае только после
второй, третьей и пятой команд учащиеся повернутся в одном направлении.

Ввод, вывод

    [input]нить commands

    Строка, состоящая только из символов «L», «R» и «A».

    Ограничения: 0 ≤ команды.длина ≤ 35

    [output]целое число

    Количество команд, после которых учащиеся смотрят в одном направлении.
"""
s = 'LLARL'


def line_up(s: str) -> int:
    """
    Вычисляет кол-во единовременных обращений всех в одну сторону.
    """
    return sum(not (n := [n, not n][x in 'LR']) for i, x in enumerate(s) if not i and (n := 0) or 1)


def test() -> None:
    """
    Тестирование работы алгоритмов.
    """
    data = (
        ("LLARL", 3),
        ("RLR", 1),
        ("", 0),
        ("L", 0),
        ("A", 1),
        ("AAAAAAAAAAAAAAA", 15),
        ("RRRRRRRRRRLLLLLLLLLRRRRLLLLLLLLLL", 16),
        ("AALAAALARAR", 5),
    )
    for key, val in data:
        assert line_up(key) == val


if __name__ == '__main__':
    test()
